//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.02.11 at 02:24:23 PM PST 
//


package com.openbet.socailbetting.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;

import org.apache.log4j.Logger;


/**
 * <p>Java class for tierType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tierType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@SuppressWarnings("rawtypes")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tierType")
public class TierType implements Comparable<TierType>{
	
	private static final Logger log = Logger.getLogger(TierType.class);

    @XmlAttribute(name = "name")
    protected String name;
    
    
    @XmlValue
    private String value;
    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

	public String getValue() {
		return value;
	}

	public void setValue(String value) {
		this.value = value;
	}

	@Override
	public int compareTo(TierType o) {
		Integer thisValue = null;
		Integer otherValue = null;
		try
		{
			thisValue = Integer.valueOf(this.value);
		}catch(Exception e)
		{
			if(log.isDebugEnabled()) log.debug("tier is not a number.", e);
		}
		try
		{
			otherValue = Integer.valueOf(o.getValue());
		}catch(Exception e)
		{
			if(log.isDebugEnabled()) log.debug("other tier is not a number.", e);
		}
		if(thisValue == null && otherValue == null)
		{
			return 0;
		}else if(thisValue == null && otherValue != null)
		{
			return -1;
		}else if(thisValue != null && otherValue == null)
		{
			return 1;
		}else
		{
			return thisValue.compareTo(otherValue);
		}
	}
    
	
}
